#魔法方法、属性、迭代器的学习
#构造方法
#!/usr/bin/python
class FooBar():
    def __init__(self, somevar=2):
        self.somevar = somevar

f = FooBar()
print(f.somevar)
f2 = FooBar("This is f2")
print(f2.somevar)
#================
#重写一般方法
#!/usr/bin/python
class A:
    def hello(self):
        print("Hello, I'm A")
class B(A):
    pass
a = A()
b = B()
a.hello()
b.hello()
######
#!/usr/bin/python
class A:
    def hello(self):
        print("Hello, I'm A")
class B(A):
    def hello(self):
        print("Hello, I'm B")
a = A()
b = B()
a.hello()
b.hello()
#===============================
#
#!/usr/bin/python
class Bird:
    def __init__(self):
        self.hungry = True
    def eat(self):
        if self.hungry:
            print("Aaaah")
            self.hungry = False
        else:
            print("No. thanks!")

class SongBird(Bird):
    def __init__(self):
        super(SongBird, self).__init__()
        self.sound = "Squawk!"
    def sing(self):
        print(self.sound)

sb = SongBird()
sb.sing()
sb.eat()

